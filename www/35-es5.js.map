{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":["splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","ionSplitPaneVisible","visible","disabled","when","detail","isPane","bind","emit","styleChildren","updateState","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","mode","toAdd","toRemove","add","remove","style","ios","md"],"mappings":"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","file":"35-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nSplitPane.style = {\n    ios: splitPaneIosCss,\n    md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"]}