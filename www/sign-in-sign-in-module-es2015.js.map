{"version":3,"sources":["./src/app/sign-in/sign-in.module.ts","./src/app/sign-in/sign-in.page.html","./src/app/sign-in/sign-in.page.ts","./src/app/sign-in/sign-in.page.scss"],"names":[],"mappings":"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","file":"sign-in-sign-in-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SignInPage } from './sign-in.page';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignInPage,\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [SignInPage]\n})\nexport class SignInPageModule {}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar></ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"sign-in-content\\\">\\n  <h2 class=\\\"auth-title\\\">\\n    Sign In with Fire\\n  </h2>\\n  <form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"signInWithEmail()\\\">\\n    <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" clearInput autocapitalize=\\\"off\\\" inputmode=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"error-container\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"signInForm.get('email').hasError(validation.type) && (signInForm.get('email').dirty || signInForm.get('email').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n            <span>{{ validation.message }}</span>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"error-container\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"signInForm.get('password').hasError(validation.type) && (signInForm.get('password').dirty || signInForm.get('password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n            <span>{{ validation.message }}</span>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </ion-list>\\n\\n    <ion-button class=\\\"sign-in-btn\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!signInForm.valid\\\">Sign In</ion-button>\\n    <div class=\\\"error-container\\\" *ngIf=\\\"submitError\\\">\\n      <div class=\\\"error-message\\\">\\n        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n        <span>{{ submitError }}</span>\\n      </div>\\n    </div>\\n    <ion-row class=\\\"sign-up-btn-wrapper\\\">\\n      <ion-button class=\\\"sign-up-btn\\\" fill=\\\"clear\\\" [routerLink]=\\\"['/sign-up']\\\">\\n        Don't have an account?\\n      </ion-button>\\n    </ion-row>\\n  </form>\\n\\n  <div class=\\\"social-auth-options\\\">\\n    <p class=\\\"options-divider\\\">Or</p>\\n    <ion-button class=\\\"social-auth-btn\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"facebookSignIn()\\\">Facebook Sign In</ion-button>\\n    <ion-button class=\\\"social-auth-btn google-auth-btn\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"googleSignIn()\\\">Google Sign In</ion-button>\\n    <ion-button class=\\\"social-auth-btn twitter-auth-btn\\\" color=\\\"secondary\\\" expand=\\\"block\\\" (click)=\\\"twitterSignIn()\\\">Twitter Sign In</ion-button>\\n  </div>\\n</ion-content>\\n\";","import { Component, NgZone } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseAuthService } from '../firebase-auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: 'sign-in.page.html',\n  styleUrls: ['sign-in.page.scss'],\n})\nexport class SignInPage {\n  signInForm: FormGroup;\n  submitError: string;\n  authRedirectResult: Subscription;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ]\n  };\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public router: Router,\n    private ngZone: NgZone,\n    private authService: FirebaseAuthService\n  ) {\n    this.signInForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n\n    // Get firebase authentication redirect result invoken when using signInWithRedirect()\n    // signInWithRedirect() is only used when client is in web but not desktop\n    this.authRedirectResult = this.authService.getRedirectResult()\n    .subscribe(result => {\n      if (result.user) {\n        this.redirectLoggedUserToProfilePage();\n      } else if (result.error) {\n        this.submitError = result.error;\n      }\n    });\n  }\n\n  // Once the auth provider finished the authentication flow, and the auth redirect completes,\n  // redirect the user to the profile page\n  redirectLoggedUserToProfilePage() {\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\n    this.ngZone.run(() => {\n      this.router.navigate(['profile']);\n    });\n  }\n\n  signInWithEmail() {\n    this.authService.signInWithEmail(this.signInForm.value['email'], this.signInForm.value['password'])\n    .then(user => {\n      // navigate to user profile\n      this.redirectLoggedUserToProfilePage();\n    })\n    .catch(error => {\n      this.submitError = error.message;\n    });\n  }\n\n  facebookSignIn() {\n    this.authService.signInWithFacebook()\n    .then((result: any) => {\n      if (result.additionalUserInfo) {\n        this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n      }\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      // const token = result.credential.accessToken;\n      // The signed-in user info is in result.user;\n      this.redirectLoggedUserToProfilePage();\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n\n  googleSignIn() {\n    this.authService.signInWithGoogle()\n    .then((result: any) => {\n      if (result.additionalUserInfo) {\n        this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n      }\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // const token = result.credential.accessToken;\n      // The signed-in user info is in result.user;\n      this.redirectLoggedUserToProfilePage();\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n\n  twitterSignIn() {\n    this.authService.signInWithTwitter()\n    .then((result: any) => {\n      if (result.additionalUserInfo) {\n        this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n      }\n      // This gives you a Twitter Access Token. You can use it to access the Twitter API.\n      // const token = result.credential.accessToken;\n      // The signed-in user info is in result.user;\n      this.redirectLoggedUserToProfilePage();\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n}\n","export default \".sign-in-content {\\n  text-align: center;\\n  --padding-bottom: 16px;\\n  --padding-end: 16px;\\n  --padding-start: 16px;\\n  --padding-top: 16px;\\n}\\n.sign-in-content .auth-title {\\n  font-weight: bold;\\n  margin-bottom: 64px;\\n  letter-spacing: 0.6px;\\n}\\n.sign-in-content .social-auth-options .options-divider {\\n  text-align: center;\\n}\\n.sign-in-content .inputs-list .input-item {\\n  --padding-start: 0px;\\n  --padding-end: 0px;\\n  --inner-padding-end: 0px;\\n}\\n.sign-in-content .error-container .error-message {\\n  margin: 16px 0px;\\n  display: flex;\\n  align-items: center;\\n  color: var(--ion-color-danger);\\n  font-size: 14px;\\n}\\n.sign-in-content .error-container .error-message ion-icon {\\n  font-size: 16px;\\n  padding-inline-end: 8px;\\n}\\n.sign-in-content .sign-in-btn {\\n  margin: 16px 0px;\\n}\\n.sign-in-content .sign-up-btn-wrapper {\\n  justify-content: flex-end;\\n  align-items: center;\\n}\\n.sign-in-content .sign-up-btn-wrapper .sign-up-btn {\\n  --padding-end: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbi1pbi9zaWduLWluLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7QUFDRjtBQUNFO0VBQ0UsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0FBQ0o7QUFHSTtFQUNBLGtCQUFBO0FBREo7QUFNSTtFQUNFLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSx3QkFBQTtBQUpOO0FBU0k7RUFDRSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsZUFBQTtBQVBOO0FBU007RUFDRSxlQUFBO0VBQ0EsdUJBQUE7QUFQUjtBQVlFO0VBQ0UsZ0JBQUE7QUFWSjtBQWFFO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQVhKO0FBYUk7RUFDRSxrQkFBQTtBQVhOIiwiZmlsZSI6InNyYy9hcHAvc2lnbi1pbi9zaWduLWluLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWduLWluLWNvbnRlbnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIC0tcGFkZGluZy1ib3R0b206IDE2cHg7XG4gIC0tcGFkZGluZy1lbmQ6IDE2cHg7XG4gIC0tcGFkZGluZy1zdGFydDogMTZweDtcbiAgLS1wYWRkaW5nLXRvcDogMTZweDtcblxuICAuYXV0aC10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLWJvdHRvbTogNjRweDtcbiAgICBsZXR0ZXItc3BhY2luZzogMC42cHg7XG4gIH1cblxuICAuc29jaWFsLWF1dGgtb3B0aW9ucyB7XG4gICAgLm9wdGlvbnMtZGl2aWRlciB7XG4gIFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLmlucHV0cy1saXN0IHtcbiAgICAuaW5wdXQtaXRlbSB7XG4gICAgICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbiAgICAgIC0tcGFkZGluZy1lbmQ6IDBweDtcbiAgICAgIC0taW5uZXItcGFkZGluZy1lbmQ6IDBweDtcbiAgICB9XG4gIH1cblxuICAuZXJyb3ItY29udGFpbmVyIHtcbiAgICAuZXJyb3ItbWVzc2FnZSB7XG4gICAgICBtYXJnaW46IDE2cHggMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG5cbiAgICAgIGlvbi1pY29uIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBwYWRkaW5nLWlubGluZS1lbmQ6IDhweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc2lnbi1pbi1idG4ge1xuICAgIG1hcmdpbjogMTZweCAwcHg7XG4gIH1cblxuICAuc2lnbi11cC1idG4td3JhcHBlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgLnNpZ24tdXAtYnRuIHtcbiAgICAgIC0tcGFkZGluZy1lbmQ6IDBweDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\";"],"sourceRoot":"webpack:///"}