{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","delegate","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","gesture","enable","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","getBoolean","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","_destroy","destroy","opts","done","queueTrns","insertStart","insertViews","insertIndex","insertComponents","removeStart","removeCount","indexOrViewCtrl","tiConfig","removeView","startIndex","setPages","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","assign","animationBuilder","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","success","failed","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","style","navLink","routerDirection","routerAnimation","pop","NavLink","onClick"],"mappings":"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","file":"21-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-92848855.js';\nimport { b as getIonMode, c as config } from './ionic-global-23e7365a.js';\nimport { h as assert } from './helpers-47d562d2.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-96111fa9.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n    constructor(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    async init(container) {\n        this.state = VIEW_STATE_ATTACHED;\n        if (!this.element) {\n            const component = this.component;\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n        }\n    }\n    /**\n     * DOM WRITE\n     */\n    _destroy() {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        const element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    }\n}\nconst matches = (view, id, params) => {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    const currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    const keysA = Object.keys(currentParams);\n    const keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (const key of keysA) {\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nconst convertToView = (page, params) => {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n    return pages.map(page => {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('component' in page) {\n            /**\n             * TODO Ionic 6:\n             * Consider switching to just using `undefined` here\n             * as well as on the public interfaces and on\n             * `NavComponentWithProps`. Previously `pages` was\n             * of type `any[]` so TypeScript did not catch this.\n             */\n            return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n        }\n        return convertToView(page, undefined);\n    }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    }\n    rootChanged() {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            const mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        this.rootChanged();\n        this.gesture = (await import('./swipe-back-2c765762.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    disconnectedCallback() {\n        for (const view of this.views) {\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ component, componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ component, componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts\n        }, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ component, componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /** @internal */\n    setRouteId(id, params, direction, animation) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        let resolve;\n        const promise = new Promise(r => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: enteringEl => {\n                let mark;\n                const p = new Promise(r => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            const viewController = this.views.find(v => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        return active\n            ? {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element\n            }\n            : undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    getActive() {\n        return Promise.resolve(this.getActiveSync());\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    getByIndex(index) {\n        return Promise.resolve(this.views[index]);\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    canGoBack(view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    getPrevious(view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    }\n    getLength() {\n        return this.views.length;\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    async queueTrns(ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        /**\n         * If using router, check to see if navigation hooks\n         * will allow us to perform this transition. This\n         * is required in order for hooks to work with\n         * the ion-back-button or swipe to go back.\n         */\n        if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const canTransition = await router.canTransition();\n                if (canTransition === false) {\n                    return Promise.resolve(false);\n                }\n                else if (typeof canTransition === 'string') {\n                    router.push(canTransition, ti.opts.direction || 'back');\n                    return Promise.resolve(false);\n                }\n            }\n        }\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                enteringView !== leavingView;\n            if (requiresTransition && ti.opts && leavingView) {\n                const isBackDirection = ti.opts.direction === 'back';\n                /**\n                 * If heading back, use the entering page's animation\n                 * unless otherwise specified by the developer.\n                 */\n                if (isBackDirection) {\n                    ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n                }\n                leavingView.animationBuilder = ti.opts.animationBuilder;\n            }\n            const result = requiresTransition\n                ? await this.transition(enteringView, leavingView, ti)\n                : {\n                    // transition is not required, so we are already done!\n                    // they're inserting/removing the views somewhere in the middle or\n                    // beginning, so visually nothing needs to animate/transition\n                    // resolve immediately because there's no animation that's happening\n                    hasCompleted: true,\n                    requiresTransition: false\n                };\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        const viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    getEnteringView(ti, leavingView) {\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    postViewInit(enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        const opts = ti.opts;\n        const insertViews = ti.insertViews;\n        const removeStart = ti.removeStart;\n        const removeCount = ti.removeCount;\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = 0; i < removeCount; i++) {\n                const view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        const finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => this.sbAni = ani\n            : undefined;\n        const mode = getIonMode(this);\n        const enteringEl = enteringView.element;\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n            leavingEl }, opts);\n        const { hasCompleted } = await transition(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        const cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction\n        };\n    }\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    }\n    removeView(view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * DOM WRITE\n     */\n    cleanup(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            /**\n             * When inserting multiple views via insertPages\n             * the last page will be transitioned to, but the\n             * others will not be. As a result, a DOM element\n             * will only be created for the last page inserted.\n             * As a result, it is possible to have views in the\n             * stack that do not have `view.element` yet.\n             */\n            const element = view.element;\n            if (element) {\n                if (i > activeViewIndex) {\n                    // this view comes after the active view\n                    // let's unload it\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                    this.destroyView(view);\n                }\n                else if (i < activeViewIndex) {\n                    // this view comes before the active view\n                    // and it is not a portal then ensure it is hidden\n                    setPageHidden(element, true);\n                }\n            }\n        }\n    }\n    canStart() {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(() => {\n                this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    }\n    render() {\n        return (h(\"slot\", null));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n    const nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n        };\n    }\n    render() {\n        return (h(Host, { onClick: this.onClick }));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"]}